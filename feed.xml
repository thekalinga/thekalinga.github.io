<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Ashok Koyi</title>
    <description>Founder @ 1Ton Technologies</description>
    <link>https://thekalinga.in/</link>
    <atom:link href="https://thekalinga.in/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 21 Sep 2019 00:43:52 +0530</pubDate>
    <lastBuildDate>Sat, 21 Sep 2019 00:43:52 +0530</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Manufacturing Consent — How Democratic operatives are undermining Bernie Sanders 2020 candidacy</title>
        <description>
          
          
          <![CDATA[
            <img src="https://thekalinga.in/2019/09/20/manufatucturing-consent/voted.jpeg" alt="Manufacturing Consent — How Democratic operatives are undermining Bernie Sanders 2020 candidacy" >
            <p><img src="voted.jpeg" alt="Manufacturing Consent — How Democratic operatives are undermining Bernie Sanders 2020 candidacy" class="featured-image img-fluid margin-auto" /></p>

<blockquote>
  <p>If voting could change anything it would be made illegal!</p>

  <p>— Anonymous</p>
</blockquote>

<p><em>Manufacturing consent</em> has been the modern means by which the <em>few powerful</em> gets to control the <em>many powerless</em>.
Since <em>the many</em> won’t give up their power so easily, the powerful must find new ways of convincing <em>the many</em> —
that the candidate of their choice does not enjoy as much support</p>

<p>In this article, I will attempt to convince you with publicly available data that
Democratic party insiders are trying manufacture consent in the current 2020 Democratic primary
season. Specially, they are trying to prop up the candidates of their choice — Joe Biden, Elizabeth Warren &amp; Pete Buttigieg — while
undermining the candidates like Bernie Sander’s candidacy thru self-serving “poll”s</p>

<p>Many of the pollsters publish their polling methodology, sampled demographics,
which they then publish along with the results. We might disagree with the methodology (or) the
demographic selection, but we atleast have these details before commenting on
whether the poll is legitimate or not</p>

<p>We now have a new phenomenon where a pollster that neither publishes their methodology,
nor demographics, but publishes just the summary/memo of which candidate
gets what percentage of votes which media picks-up to run non-stop propaganda
with no questions about the credibility of the poll</p>

<p>This is the story of one such establishment pollster who publishes
polls that are highly questionable at best, outright corrupt at worst</p>

<h2 id="background">Background</h2>

<p>If you paid attention to news lately, you would notice media telling
everyone that <em>Bernie is falling</em> while <em>Warren is surging</em></p>

<p>To this end, I would like to focus on one of the recent polling published
by an organization called <strong>Focus on Rural America</strong>. I’ll refer to this organization as <em>FORA</em> from now on</p>

<p><a href="https://twitter.com/PpollingNumbers/status/1174315218593341440" target="\_blank"><img src="images/twitter-political-polls-highlight.png" alt="Diagram: Political Polls: Summary of Focus on Rural America" class="featured-image img-fluid margin-auto" /></a></p>

<p>Here are some of the media outlets that picked the poll put out by <em>FORA</em></p>

<ol>
  <li><a href="https://thehill.com/homenews/campaign/461896-new-poll-finds-biden-warren-in-virtual-tie-in-iowa" target="\_blank">New poll finds Biden, Warren in virtual tie in Iowa</a></li>
  <li><a href="https://www.politicususa.com/2019/09/18/iowa-democratic-poll.html" target="\_blank">New Iowa Poll Finds Warren Surging, Sanders Fading, and Biden Leading</a></li>
  <li><a href="https://www.washingtontimes.com/news/2019/sep/18/joe-biden-edges-elizabeth-warren-iowa-pete-buttigi/" target="\_blank">Joe Biden edges Elizabeth Warren in Iowa, Pete Buttigieg in third: Poll</a></li>
  <li><a href="https://thehill.com/homenews/campaign/462072-warren-shows-signs-of-broadening-her-base" target="\_blank">Warren shows signs of broadening her base</a></li>
  <li><a href="https://www.fox2detroit.com/news/presidential-candidate-amy-klobuchar-in-detroit-hoping-to-build-on-midwest-momentum" target="\_blank">Presidential candidate Amy Klobuchar in Detroit hoping to build on Midwest momentum</a></li>
  <li><a href="https://www.politico.com/story/2019/08/20/democratic-primary-rural-outreach-1469005" target="\_blank">Dems fear another rural wipeout will reelect Trump</a></li>
</ol>

<p>There are lot more outlets that picked up this. To see all of them go <a href="https://www.google.com/search?q=&quot;focus+on+rural+america&quot;&amp;tbm=nws" target="\_blank">here</a></p>

<p>And some political commentators have already picked this stuff &amp; spreading it among their followers</p>

<p><a href="https://twitter.com/davidaxelrod/status/1174299432692719616" target="\_blank"><img src="images/david-axelrod.png" alt="Diagram: David Axelrod sharing FORA poll" class="featured-image img-fluid margin-auto" /></a></p>

<p>Also, polling pundits like <em>Nate Silver</em> have used this poll as a base to downplay Bernie</p>

<p><a href="https://fivethirtyeight.com/features/theres-a-better-case-for-a-top-2-than-a-top-3/amp/?__twitter_impression=true" target="\_blank"><img src="images/nates-liver-digg-highlight.png" alt="Diagram: Nate Silver downplaying Bernie in Iowa" class="featured-image img-fluid margin-auto" /></a></p>

<p>Mainstream TV outlets like MSNBC already used these polls to draw inference about electability, drumming up propaganda</p>

<p class="article-post"><iframe width="800" height="600" class="featured-image margin-auto" src="https://streamable.com/uz9a4" frameborder="0" allowfullscreen=""></iframe></p>

<p>I am told that many other mainstream TV outlets also ran multiple segments based on this specific poll. I will update this post when I gets access to the footage</p>

<p>Since many legitimate media outlets &amp; TV talking heads are taking this poll seriously to push an agenda, lets take a close look at the organization</p>

<h2 id="uncovering-the-actors">Uncovering the actors</h2>

<p>Lets start with analyzing the credibility of this poll publisher <em>FORA</em>; specifically,</p>

<ol>
  <li>Who are behind it</li>
  <li>Which pollster do they use</li>
  <li>What polling methodology does the pollster use</li>
</ol>

<p>If you go to the link, You would notice that the poll is published by someone named <em>Jeff Link</em></p>

<p><a href="http://www.focusonruralamerica.com/190914-iowa-voter-survey-memo/" target="\_blank"><img src="images/iowa-voter-survey-summary-page-highlight.png" alt="Diagram: Focus on America Summary page" class="featured-image img-fluid margin-auto" /></a></p>

<p>When you click on the Author’s link, you get <em>The page you requested could not be found.</em></p>

<p><a href="http://www.focusonruralamerica.com/author/jeff/" target="\_blank"><img src="images/jeff-not-found-highlight.png" alt="Diagram: Jeff does not exists" class="featured-image img-fluid margin-auto" /></a></p>

<p><a href="http://www.focusonruralamerica.com/about/">About</a> &amp; <a href="http://www.focusonruralamerica.com/contact-us/">Contact</a> page does not help us either</p>

<p>A different page on the website explains that <em>Jeff Link</em> is the co-founder of <em>FORA</em></p>

<p><a href="http://www.focusonruralamerica.com/2019/09/18/september-2019-poll-results/" target="\_blank"><img src="images/jeff-mention-in-fora-highlight.png" alt="Diagram: Jeff Link is the co-founder of FORA" class="featured-image img-fluid margin-auto" /></a></p>

<p>Navigating the website does not give you anymore information about who this man is.
If you google for his name, you will find another website called <a href="http://www.linkstrategies.com/our-team/jeff-link/">Link strategies</a>.</p>

<p>It describes him as someone with expertise in <em>paid media strategy</em> &amp; <em>public opinion-research</em>.
He was <em>ex-Bill Clinton</em> staffer &amp; also ran <em>Paid Media and Research to the Obama for America Campaign</em> —
specifically — <em>he coordinated all paid media and polling in 25 states</em>.</p>

<p><a href="http://www.linkstrategies.com/our-team/jeff-link/" target="\_blank"><img src="images/jeff-link-strategies-highlight.png" alt="Diagram: Jeff Link - Link strategies" class="featured-image img-fluid margin-auto" /></a></p>

<p>The same post also mentions another person who holds the post of chair in <em>FORA</em>, namely <strong>Patty Judge</strong> who also happens to be <em>Past Lt. Governor and Secretary of Agriculture</em> for Iowa</p>

<p><a href="http://www.focusonruralamerica.com/2019/09/18/september-2019-poll-results/" target="\_blank"><img src="images/patty-in-fora-highlight.png" alt="Diagram: Patty Judge is the Chair of FORA" class="featured-image img-fluid margin-auto" /></a></p>

<p><em>Patty Judge</em> gave glowing views of <em>Elizabeth Warren</em> in Jan 2019 — a month after warren announced her candidacy to enter Democratic primary</p>

<p><a href="https://www.macleans.ca/politics/washington/elizabeth-warren-haunted-by-ghosts-of-sexism-past/" target="\_blank"><img src="images/patty-praising-warren-highlight.png" alt="Diagram: Patty Judge praising Warren" class="featured-image img-fluid margin-auto" /></a></p>

<p>Not just that, as recently as Jun 2019, she hung around warren during her visit an ethanol factory in Iowa</p>

<p><a href="http://www.focusonruralamerica.com/2019/06/13/warren-judge-tour-ethanol-plant/" target="\_blank"><img src="images/warren-and-patty-on-field-trip-highlight.png" alt="Diagram: Patty Judge accompanying Warren" class="featured-image img-fluid margin-auto" /></a></p>

<p>Going over the past posts further gives a glimpse of who else are behind <em>FORA</em></p>

<p>A post dating back to May 2017 lists a man named <strong>Sam Roecker</strong> as an Advisor.</p>

<p><a href="http://www.focusonruralamerica.com/2017/05/30/new-nonprofit-seeks-boost-progressive-causes-rural-america/" target="\_blank"><img src="images/sam-roecker-in-fora-highlight.png" alt="Diagram: Sam Roecker in FORA" class="featured-image img-fluid margin-auto" /></a></p>

<p>His twitter profile says he worked as the state director for <strong>John Hickenlooper</strong> —
the same <a href="https://edition.cnn.com/videos/politics/2019/07/30/cnn-democratic-debate-bernie-sanders-john-hickenlooper-trump-vpx.cnn"><em>throw your hands up</em> Hickenlooper</a>
who was after Bernie in the recent presidential polls before <a href="(https://www.newsweek.com/john-hickenlooper-withdraw-2020-presidential-race-1454440),">dropping out</a></p>

<p><a href="https://twitter.com/SamRoecker" target="\_blank"><img src="images/sam-roecker-twitter-highlight.png" alt="Diagram: Sam Roecker in Twitter" class="featured-image img-fluid margin-auto" /></a></p>

<p>In summary, here are the people people behind <em>FORA</em></p>

<ol>
  <li>A co-founder, who worked for many Democratic establishment candidates in the past — Clinton, Obama &amp; more</li>
  <li>An advisor, who in the past worked for primary opponent of Bernie (Hickenlooper)</li>
  <li>A chairman, who praises Warren (another opponent of Bernie) &amp; hangs around with her during the current primary campaign</li>
</ol>

<p>Even with all the establishment actors running the show, its possible that the poll published by them might still be a <em>credible</em> one — if the pollster conducted the poll in a scientific manner with a well defined methodology</p>

<p>So, lets look at the pollster &amp; the polling methodology he employed to arrive at this “poll”</p>

<h2 id="uncovering-the-pollster">Uncovering the pollster</h2>

<p>On the last page of the <a href="http://www.focusonruralamerica.com/wp-content/uploads/2019/09/190914-Iowa-Voter-Survey-memo.pdf">memo</a>,
it is mentioned that a pollster named <strong>David Binder Research</strong> has conducted these polls.
We will get back to the pollster lil later</p>

<p><a href="http://www.focusonruralamerica.com/wp-content/uploads/2019/09/190914-Iowa-Voter-Survey-memo.pdf" target="\_blank"><img src="images/fora-methodology-highlight.png" alt="Diagram: Sam Roecker in Twitter" class="featured-image img-fluid margin-auto" /></a></p>

<p>We are only given access to the <a href="http://www.focusonruralamerica.com/wp-content/uploads/2019/09/190914-Iowa-Voter-Survey-memo.pdf">memo</a> of the poll —
from which — it is hard to get any idea about what questions were actually posed to the voters &amp; what their answers were.</p>

<p>You are told vague things like</p>

<ol>
  <li>Percent with Positive Opinion</li>
  <li>Ruled Out <em>vs</em> Actively Considering</li>
</ol>

<p>They dont tell you how these voting percentages were arrived at —
how voters were selected — what their demographics are —
white/black/asian/native american, men/women, rich/middle class/working poor, old/middle aged/young —
what percentage of the potential voters were contacted over landline vs mobile.</p>

<p>Nothing. You get no details about these important factors</p>

<p>They simply have a four page memo, which has tables that says this is what we found.
Almost all polls atleast give detailed breakdown, voter criteria,
but this one does not even bother giving you that information.</p>

<p>It just shares the conclusions on what percentage of votes each of democratic primary candidate will get in Iowa</p>

<p>Now lets get back to finding who is behind <em>David Binder Research</em></p>

<p>As per <a href="https://www.realclearpolitics.com/lists/hispanic_pollsters/david_binder.html">Real clear politics</a>, <em>David Binder Research</em> is run by a guy
named <em>David Binder</em>, who worked as an <em>in-house pollster for the Obama campaign in 2008 and 2012</em></p>

<p><a href="https://www.realclearpolitics.com/lists/hispanic_pollsters/david_binder.html" target="\_blank"><img src="images/david-binder-on-rcp-highlight.png" alt="Diagram: David Binder in RCP" class="featured-image img-fluid margin-auto" /></a></p>

<p>The most important aspect being</p>

<blockquote>
  <p>Binder specializes in <strong>qualitative</strong> rather than <strong>quantitative</strong> research.
His focus is on assessing <strong>subjective factors</strong> such as <strong>language</strong>, <strong>emotion</strong>, and <strong>attitudes</strong></p>
</blockquote>

<p>To me, all this word salad means only one thing.
It means he <em>mind-reads</em> potential voters when conducting his polling.
In simple terms the polls capture <em>his fellings</em> of <em>voter’s feelings</em> about politicians</p>

<p>I have never heard a worse way to describe a pollster than this.
Given that only the memo is published without the underlying dataset,
I am assuming that this poll is based on the <strong>feelings</strong> of <em>David Binder</em> staff
about which democratic candidate gets what percentage of votes in Iowa
in the upcoming democratic primary election</p>

<p>Also, when you look at the staff page of <em>David Binder Research</em>, one of the name caught my eye.
His name is <em>Ethan Axelrod</em></p>

<p><a href="https://www.db-research.com/#team" target="\_blank"><img src="images/ethan-axelrod-highlight.png" alt="Diagram: Ethan Axelrod in DBR" class="featured-image img-fluid margin-auto" /></a></p>

<p>He is the son of <em>David Axelrod</em>, who happen to be the chief strategist for Obama’s presidential campaigns</p>

<p><a href="https://www.google.com/search?q=David+Axelrod+children" target="\_blank"><img src="images/ethan-axelrod-parentage-highlight.png" alt="Diagram: Ethan Axelrod parentage" class="featured-image img-fluid margin-auto" /></a></p>

<h2 id="conclusion">Conclusion</h2>

<p>An organization called <em>Focus on Rural America</em> run by ex-dem staffers/leaders —
that’s founded by someone who worked for Bill Clinton, ran paid campaigns for  Obama —
that’s advised by someone who worked as State director for Hickenlooper —
that’s chaired by someone who has apparent allegiance to one of the Democratic primary candidates —
specifically — Elizabeth Warren — publish just memo of the poll where Bernie is getting lower vote share than <em>Pete Buttigieg</em>.</p>

<p>These polls are conducted by an ex-Obama pollster —
with a staff member whose father worked for Obama as chief strategist —
publishes just memo of the poll —
with numbers that are complete outliers —
with no information on the methodology/demographic breakdown —
which then are picked-up by mainstream media —
use this poll to push free propaganda for Warren &amp; other corporate dems —
till this propaganda becomes reality in the minds of undecided voters.</p>

<p>Most of the outlets that reported these finding don’t mention that the
polling is done by people who worked for corporate democrats in the past &amp;
are commissioned by people who are batting for Warren, a candidate in the current democratic primary</p>

<p>What else do you call this other than <em>Manufacturing Consent</em> by democratic establishment —
in connivance with their toadies in the mainstream media —
to push a corporate democratic candidate?</p>

          ]]>
          
        </description>
        
        
        <media:content medium="image" url="https://thekalinga.in/2019/09/20/manufatucturing-consent/voted.jpeg" />
        
        <pubDate>Fri, 20 Sep 2019 00:00:00 +0530</pubDate>
        <link>https://thekalinga.in/2019/09/20/manufatucturing-consent/</link>
        <guid isPermaLink="true">https://thekalinga.in/2019/09/20/manufatucturing-consent/</guid>
        
        <category>Politics</category>
        
        <category>Bernie Sanders</category>
        
        <category>Democratic Party</category>
        
        <category>Focus on Rural America</category>
        
        <category>Fake polls</category>
        
        <category>Manufacturing consent</category>
        
        
        <category>Politics</category>
        
      </item>
    
      <item>
        <title>Consistency thru compensation in micro services</title>
        <description>
          
          
          <![CDATA[
            <img src="https://thekalinga.in/2019/03/22/consistency-thru-compensation-in-micro-services/consistency-failures.jpg" alt="Consistency thru compensation in micro services" >
            <p><img src="consistency-failures.jpg" alt="Consistency thru compensation in micro services" class="featured-image img-fluid margin-auto" /></p>

<p>This article addresses the eventual consistency aspect of transactions in micro services environment where a transaction spans more than one micro service &amp; transaction failure midway is imminent</p>

<h2 id="existing-business-usecase">Existing business usecase</h2>

<p>Suppose that we currently have a monolithic order management system that is backed by a RDBMS</p>

<h3 id="business-requirements">Business requirements</h3>

<p>Our business expects us to give them the following guarantees</p>

<ol>
  <li>Never accept an order if the inventory does not have enough stock</li>
  <li>Every item in the inventory is either assigned to an order (or) available for further purchases by customer within a reasonable amount of time</li>
</ol>

<p>As every seasoned developer knows, Monolith is a heaven for systems that want consistency because of RDBMS &amp; the ACID guarantees it provides. But this comes at the cost of autonomy &amp; scalability</p>

<p>Because of ACID guarantees, when we update both order &amp; inventory tables, either the transaction succeeds (or) fails atomically. Because of this, it is easy to ensure</p>

<blockquote>
  <p><strong>Total inventory</strong> = <strong>Amount of stock left in inventory</strong> + <strong>quantity used up by previous orders</strong></p>
</blockquote>

<p>In essence, its relatively easy to fulfill this requirement in our monolithic world since we will be working against a single database</p>

<blockquote>
  <p>Please note that most of the businesses will be OK if we oversell items even when we don’t have corresponding stock in the inventory. This is because once the order is placed, the business can ask vendors to send it more stock of the oversold items &amp; still fulfill our customer’s order. The point this article addresses is “can the technology live within business constraints”?. Suppose our business does not permit overselling because we are selling rare items, say classic paintings/some other exclusive items, which means we cant oversell as no other vendor can supply additional stock of all items in our inventory</p>
</blockquote>

<h2 id="breaking-monolith">Breaking monolith</h2>

<p>Suppose we chose micro services for achieving autonomy in terms of scalability/development velocity/release schedule, e.t.c, it follows that we can’t share a single database across all of these micro services. Sharing database across micro services forces each team to coordinate with other team as soon as database schema needs to change, which defeats the whole purpose of micro services</p>

<p>Each type of micro service (can have any number of instances) will have to have its own private datastore. In other words, multiple instances of the same service type share a single database, but this database is never shared across micro services</p>

<p>After we identified our <a href="https://martinfowler.com/bliki/BoundedContext.html">bounded contexts</a>, we came up with the following breakup of our monolith into two micro services namely</p>

<ol>
  <li><code>order-service</code> whose responsibility it is to accept customer orders</li>
  <li><code>inventory-service</code> whose responsibility it is to allow changes to inventory by both order service &amp; also by our own internal inventory team</li>
</ol>

<p><img src="svg-optimized/inventory-services-with-actors-and-db.svg" alt="Diagram: Inventory services with db &amp; actors" class="featured-image img-fluid margin-auto" /></p>

<p>At first glance, fulfilling this business requirements in micro services does not look that hard</p>

<p>We can make <code>order-service</code> call to <code>inventory-service</code> to check if sufficient stock exists to fulfil the order. If stock is available, reduce the given quantity of stock &amp; permit the order to go thru. If not, deny the order</p>

<p><img src="svg-optimized/order-placement-sequence-diagram.svg" alt="Diagram: Order placement sequence" class="featured-image img-fluid margin-auto" /></p>

<p>But any seasoned developer will tell you it is not that simple (and I would not have written this article if it was this simple)</p>

<h2 id="problem-with-concurrent-transactions">Problem with concurrent transactions</h2>

<p>Suppose two different users try purchasing the same item simultaneously when not enough stock exists to fulfill both the orders. If proper care is not taken at <code>inventory-service</code> level, we might allow both orders to succeed, even tho we don’t have enough stock to fulfill both</p>

<p><img src="svg-optimized/inventory-overdraw.svg" alt="Diagram: Inventory overdraw" class="featured-image img-fluid margin-auto" /></p>

<p>As any one who is familiar with concurrency control will tell us, why doesn’t <code>inventory-service</code> reject the second request by utilizing <a href="https://www.wikiwand.com/en/Optimistic_concurrency_control">optimistic concurrency control</a> (or) <a href="https://blogs.msdn.microsoft.com/marcelolr/2010/07/16/optimistic-and-pessimistic-concurrency-a-simple-explanation/">pessimistic concurrency control</a></p>

<p>Once we apply this fix, if two users attempt simultaneous purchase only one of them would succeed if fulfilling both orders results in stock becoming negative</p>

<p><img src="svg-optimized/order-placement-sequence-diagram-singleshot-update.svg" alt="Diagram: Sequence diagram of Inventory service with optimistic concurrency control" class="featured-image img-fluid margin-auto" /></p>

<h2 id="problem-with-server-failures">Problem with server failures</h2>

<p>Even with the above solution, we are still left with a problem</p>

<p>When it comes to servers on which our application runs, no one can guarantee that the hardware never fails. So server failure is a given. Every application must keep this in mind &amp; should be resilient to these failures</p>

<p>What if <code>inventory-service</code> reduced the quantity in its database &amp; <code>order-service</code> dies before it commits to its database?</p>

<p><img src="svg-optimized/order-server-fail-sequence-diagram.svg" alt="Diagram: Inventory server dies before local commit after inventory is reduced" class="featured-image img-fluid margin-auto" /></p>

<p>Now we are left with an interesting situation where we have missing inventory from the system because the server crashed. Welcome to <strong>DATA INCONSISTENCY</strong></p>

<h2 id="going-back-to-drawing-board">Going back to drawing board</h2>

<p>Now we know business will be really unhappy because even though we have unsold physical inventory, its missing in the software because one of our server crashed in the middle of the transaction</p>

<p>There are multiple ways this problem can be addressed. In this article I will present one way of addressing this</p>

<p>In the previous approach, <code>order</code> will be either in <code>confirmed</code>/<code>rejected</code> state &amp; the client is stateless</p>

<p>But in our new approach</p>

<ol>
  <li>Order will have three states namely <code>initialized</code>, <code>confirmed</code> &amp; <code>rejected</code></li>
  <li>And our client would be Stateful</li>
  <li>In addition, the client will follow <a href="https://www.theserverside.com/news/1365146/Redirect-After-Post">Redirect after POST</a> pattern</li>
</ol>

<p>The reason for this redirect is because when client encounters a failure like the one in previous scenario, we don’t want the client to retry the operation &amp; place multiple orders for the same cart because user refreshed his browser. The previous pattern avoids this situation completely</p>

<p>Given that, here is our new approach</p>

<ol>
  <li>As soon as a request is received, <code>order-service</code> saves an order with status <code>initialized</code> to its own db</li>
  <li>Immediately, <code>order-service</code> will make call to <code>inventory-service</code> with the <code>&lt;order id&gt;</code> and additional item info to reduce the stock in a background thread with an exclusive <a href="https://www.percona.com/blog/2018/10/16/postgresql-locking-part-1-row-locks/">row level lock</a> on the newly created order</li>
  <li><code>order-service</code> responds to the client with HTTP <code>202 Accepted</code> (if API based client)/<code>302 Found</code> (if browser) response with a link to check the status of the order thru http <code>Location</code> header</li>
  <li>If background order placement succeeds, <code>order-service</code> will update the status of the order to <code>confirmed</code> &amp; releases row level lock on the order</li>
  <li>If not, <code>order-service</code> will update the status of the order to <code>rejected</code> &amp; releases row level lock on the order</li>
  <li>Once client sees above <code>202</code>/<code>302</code> response, it will redirect the user to order status page (incase of browser) so that browser refreshes does not cause duplicate orders. Its a best practice to show loading screen while the order is being processed</li>
  <li>Finally, <code>order-service</code> would respond to the order status request with <code>initialized</code>/<code>confirmed</code>/<code>rejected</code> status</li>
  <li>If the order is not yet concluded, latest status can be obtained by client using polling/server can implement <a href="https://www.wikiwand.com/en/Push_technology">long polling</a> to avoid client putting too much polling load</li>
</ol>

<p>From point <code>(2)</code> of the mechanism above, in normal flow, <code>order-service</code> takes an <code>exclusive row level lock</code> over the order row and releases only once the transaction is concluded</p>

<p>If server crashes in the middle, this lock on that order row would be be released immediately by database</p>

<p>We will use this aspect to make sure that we dont interfere with the transactions that are currently in progress, when we try to reconcile/compensate (will be discussed later)</p>

<p>Now back to the crash issue in <code>order-service</code></p>

<p>Since crash leaves our data in inconsistent state, <code>order-service</code> will have to explicitly <strong>reconcile</strong>/<strong>compensate</strong> for these failures at the application level by fetching the latest status of the order from <code>inventory-service</code> for abandoned orders. This is why its called <code>Compensating Transaction</code></p>

<p>Compensation guarantees order status to be consistent with the business rules <strong>EVENTUALLY</strong>, but not immediately</p>

<p>Depending on how soon we want this reconciliation, we can implement reconciliation in the following three stages</p>

<ol>
  <li>Startup reconciliation: Orders abandoned before the instance is started are guaranteed to be consistent once the instance is up (optional)</li>
  <li>On demand reconciliation: Orders requested by client are guaranteed to be consistent once the request is processed successfully (optional)</li>
  <li>Scheduled reconciliation: Orders that are abandoned before the scheduler ran are guaranteed to be consistent once scheduler runs successfully (mandatory)</li>
</ol>

<p>The guarantees each of the above three reconcilers provides are only valid for those orders for which the reconciler can acquire exclusive lock. If some other instance’s reconciler is doing compensation for any given order, the current reconciler just skips over them</p>

<p>Now lets look at each one of these options &amp; how the reconcilation/compensation works</p>

<h3 id="startup-reconciliation">Startup reconciliation</h3>

<p>This type of reconciliation guarantees that all the orders that were abandoned before the startup of the instance are guaranteed to be consistent once application is up</p>

<p>Suppose that <code>order-service</code> crashed in the middle of a transaction (abandoned). Instance can be brought back online manually/using kubernetes/some other mechanism</p>

<p>Here is what we should do as part of <code>order-service</code> startup to meet above guarantee</p>

<ul>
  <li><code>order-service</code> have to check if there are any orders in <code>initialized</code> state</li>
  <li>Attempt to acquire exclusive row level lock on each of the above orders. If lock cannot be acquired, just skip over it as this order is current being processed by some other instance</li>
  <li>For each of the above order on which lock can be acquired, <code>order-service</code> will request <code>inventory-service</code> about the latest status of the stock consumed by the given <code>&lt;order id&gt;</code></li>
  <li><code>inventory-service</code> will return latest status, which <code>order-service</code> will use to update in its own database &amp; release exclusive row level lock</li>
</ul>

<p>This way, <code>order-service</code> guarantees all orders that were abandoned before the startup will be consistent after startup</p>

<p><img src="svg-optimized/startup-reconciliation.svg" alt="Diagram: Starup reconciliation" class="featured-image img-fluid margin-auto" /></p>

<h3 id="on-demand-reconciliation">On demand reconciliation</h3>

<p>Implementing this gives a guarantee that any abandoned order/transaction will be reconciled on the subsequent status request for that given order. Note that this only reconciles one specific order, not all abandoned orders</p>

<p>The way this works is, as soon as we receive a request for order status</p>

<ol>
  <li><code>order-service</code> will get the status of the order from local db</li>
  <li>If status is <code>initialized</code>, attempt to acquire exclusive row level lock</li>
  <li>If row level lock cannot be acquired (some other instance is working on this), then wait till exclusive row level lock can be acquired on the order</li>
  <li>Once lock is acquired, check if status is still <code>initialized</code>. If true, move to step (5), else return latest status</li>
  <li><code>order-service</code> will request <code>inventory-service</code> about the latest status of the stock consumed by the given <code>&lt;order id&gt;</code></li>
  <li><code>inventory-service</code> will return latest status, which <code>order-service</code> will use to update in its own database &amp; release exclusive row level lock</li>
</ol>

<p>Suppose that we have two instances of <code>order-service</code> &amp; the 1st instance is handling the order request &amp; the server crashed midway just like before. When the client resends order status request (clients are expected to do this on a best effort basis), it will be received by the second instance, at which point, we can do compensation logic for the abandoned order as part of this request. This way client does not have to wait till the scheduled reconciliation to get the latest status (next section)</p>

<p><img src="svg-optimized/sibling-reconciliation.svg" alt="Diagram: Sibling reconciliation" class="featured-image img-fluid margin-auto" /></p>

<h3 id="scheduled-reconciliation">Scheduled reconciliation</h3>

<p>This type of reconciliation guarantees that all the orders that were abandoned before the start of the current run of scheduler are guaranteed to be consistent once scheduler run is complete</p>

<p>Since relying on client to reconcile all orders that failed midway is not a good idea as the client might never be able to contact the server due to network issue or some other reason, we want a mechanism within the application itself that does auto reconciliation at regular interval. This is where scheduled reconciliation comes in</p>

<p>At regular interval we have to <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#scheduling">schedule a task</a> to be run within our application that does the reconciliation</p>

<p>For each run of the scheduled task, this is what the reconciler does</p>

<ul>
  <li><code>order-service</code> will fetch all orders that are in <code>initialized</code> state</li>
  <li>Attempt to acquire exclusive row level lock on each of the above orders. If lock cannot be acquired, just skip over it as this order is current being processed by some other instance</li>
  <li>For each of the above order on which lock can be acquired, <code>order-service</code> will request <code>inventory-service</code> about the latest status of the stock consumed by the given <code>&lt;order id&gt;</code></li>
  <li><code>inventory-service</code> will return latest status, which <code>order-service</code> will use to update in its own database &amp; release exclusive row level lock</li>
</ul>

<p><img src="svg-optimized/scheduled-reconciliation.svg" alt="Diagram: Scheduled reconciliation" class="featured-image img-fluid margin-auto" /></p>

<h2 id="conclusion">Conclusion</h2>

<p>We looked at one approach by which we can achieve resiliency in our application even under server crashes &amp; any intermediate failures</p>

<p>In order to achieve that, we needed</p>

<ol>
  <li>Stateful client</li>
  <li>Compensating transactions/Reconcilers at various levels</li>
</ol>

<p>We looked at three types of reconciliations</p>

<ul>
  <li>Startup reconciliation</li>
  <li>On demand reconciliation</li>
  <li>Scheduled reconciliation</li>
</ul>

<p>It is important to note that each application must have Scheduled reconciler as this guarantees regular reconciliation &amp; is not dependent on external actors. The other two types of reconciliations are optional but preferred</p>

<p>In a typical application, you would have all three reconcilers to reduce the amount of time the system will be in inconsistent state in case of unexpected failures</p>

<p>If you have any queries/suggestions let me know in the comments section</p>

          ]]>
          
        </description>
        
        
        <media:content medium="image" url="https://thekalinga.in/2019/03/22/consistency-thru-compensation-in-micro-services/consistency-failures.jpg" />
        
        <pubDate>Fri, 22 Mar 2019 00:00:00 +0530</pubDate>
        <link>https://thekalinga.in/2019/03/22/consistency-thru-compensation-in-micro-services/</link>
        <guid isPermaLink="true">https://thekalinga.in/2019/03/22/consistency-thru-compensation-in-micro-services/</guid>
        
        <category>DDD</category>
        
        <category>Domain Driven Design</category>
        
        <category>Micro Services</category>
        
        <category>Distributed Systems</category>
        
        
        <category>Micro Services</category>
        
      </item>
    
      <item>
        <title>Inkscape Iconset: Pipes and Valves</title>
        <description>
          
          
          <![CDATA[
            <img src="https://thekalinga.in/2018/10/04/iconset-inkscape-pipes-and-valves/pipes-and-valves.svg" alt="Inkscape Iconset: Pipes and Valves" >
            <p><img src="pipes-and-valves.svg" alt="Inkscape Iconset: Pipes and Valves" class="featured-image img-fluid" /></p>

<p>Pipe &amp; Valve Iconset created using <a href="https://inkscape.org/en/">Inkscape</a></p>

<p>You can download them <a href="pipes-and-valves.svg">here</a></p>

<p>Licensed under <a href="https://creativecommons.org/publicdomain/zero/1.0/">Public Domain Dedication</a></p>

          ]]>
          
        </description>
        
        
        <media:content medium="image" url="https://thekalinga.in/2018/10/04/iconset-inkscape-pipes-and-valves/pipes-and-valves.svg" />
        
        <pubDate>Thu, 04 Oct 2018 00:00:00 +0530</pubDate>
        <link>https://thekalinga.in/2018/10/04/iconset-inkscape-pipes-and-valves/</link>
        <guid isPermaLink="true">https://thekalinga.in/2018/10/04/iconset-inkscape-pipes-and-valves/</guid>
        
        <category>Icon</category>
        
        <category>Inkscape</category>
        
        <category>CC0</category>
        
        <category>Pipe</category>
        
        <category>Valve</category>
        
        
        <category>Icons</category>
        
      </item>
    
  </channel>
</rss>
